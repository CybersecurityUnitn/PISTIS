

	.global memcpy
	.type memcpy, @function
memcpy:
	nop
	nop
	pushm.a	#1,	r10	;20-bit words

	pushm.a	#1,	r8	;20-bit words

	mova	r12,	r8	;
	mova	r14,	r15	;

	clr.b	r12		;

.L3:
	cmpa	r12,	r15	;
	jnz	.L8     	;abs 0x45be

	mova	r8,	r12	;

	popm.a	#1,	r8	;20-bit words

	popm.a	#1,	r10	;20-bit words

	reta			;

.L8:
	mova	r8,	r14	;
	adda	r12,	r14	;

	mova	r13,	r10	;
	adda	r12,	r10	;

	mov.b	@r10,	0(r14)	;
	adda	#1,	r12	;

	jmp .L3	;mova	#17842,	r0	;0x045b2



	.global memset
	.type memset, @function
memset:
	nop
	nop
	pushm.a	#1,	r10	;20-bit words

	adda	r12,	r14	;

	mova	r12,	r10	;

.L14:
	cmpa	r14,	r10	;
	jnz	.L17      	;abs 0x45e0

	popm.a	#1,	r10	;20-bit words

	reta			;

.L17:
	adda	#1,	r10	;

	mov.b	r13,	-1(r10)	; 0xffff
	jmp .L14	;mova	#17880,	r0	;0x045d8



	.global __umulhisi2
	.type __umulhisi2, @function
__umulhisi2:
	nop




	.global _exit
	.type _exit, @function
_exit:
	nop
	nop
	jmp _exit	;mova	#17926,	r0	;0x04606



	.global __mspabi_mpyul
	.type __mspabi_mpyul, @function
__mspabi_mpyul:
	nop




	.global __mspabi_mpyul_f5hw
	.type __mspabi_mpyul_f5hw, @function
__mspabi_mpyul_f5hw:
	nop
	nop
	push	r2		;
	dint			
	nop			
	mov	r12,	&0x04c0	;
	mov	r13,	&0x04c8	;
	mov	&0x04ca,r12	;0x04ca
	mov	&0x04cc,r13	;0x04cc
	pop	r2		;
	reta			;